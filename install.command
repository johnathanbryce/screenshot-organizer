#!/bin/bash

# Screenshot Organizer - Easy Installer
# This script handles all setup including macOS security permissions

echo "üñºÔ∏è  Screenshot Organizer - Easy Installer"
echo "=========================================="
echo ""

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

echo "üìÅ Working directory: $SCRIPT_DIR"
echo ""

# Remove quarantine attributes from all files (fixes macOS Gatekeeper issues)
echo "üîì Removing macOS quarantine attributes..."
xattr -d com.apple.quarantine * 2>/dev/null
xattr -dr com.apple.quarantine . 2>/dev/null
echo "‚úÖ Security attributes cleared"
echo ""

# Make command files executable
echo "üîß Setting up executable permissions..."
chmod +x StartScreenshotOrganizer.command 2>/dev/null
chmod +x StopScreenshotOrganizer.command 2>/dev/null
chmod +x install.sh 2>/dev/null
echo "‚úÖ Permissions configured"
echo ""

# Check if Python 3 is available
echo "üêç Checking Python installation..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 is required but not found."
    echo ""
    echo "Please install Python 3 from https://python.org"
    echo "Then run this installer again."
    echo ""
    echo "Press any key to exit..."
    read -n 1
    exit 1
fi

PYTHON_VERSION=$(python3 --version)
echo "‚úÖ Found: $PYTHON_VERSION"
echo ""

# Check and install watchdog if needed
echo "üì¶ Checking required packages..."
python3 -c "import watchdog" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "üì¶ Installing required package (watchdog)..."
    echo "   This may take a moment..."
    python3 -m pip install --user watchdog --quiet
    if [ $? -ne 0 ]; then
        echo ""
        echo "‚ö†Ô∏è  Automatic installation failed. Trying alternative method..."
        pip3 install --user watchdog
        if [ $? -ne 0 ]; then
            echo ""
            echo "‚ùå Failed to install watchdog package."
            echo "Please try manually running: pip3 install watchdog"
            echo ""
            echo "Press any key to exit..."
            read -n 1
            exit 1
        fi
    fi
    echo "‚úÖ Successfully installed watchdog"
else
    echo "‚úÖ All required packages installed"
fi
echo ""

# Run configuration
echo "‚öôÔ∏è  Time to configure your screenshot organizer!"
echo ""
python3 main.py --config

# Check if configuration was completed
if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå Configuration was cancelled or failed."
    echo "Run this installer again when you're ready."
    echo ""
    echo "Press any key to exit..."
    read -n 1
    exit 1
fi

# Ask about background service installation
echo ""
echo "üöÄ Would you like to install this as a background service?"
echo "   This will make it run automatically (even after restarts)."
echo ""
read -p "Install background service? (y/n) [y]: " install_choice

if [[ "$install_choice" =~ ^[Yy]$ ]] || [[ "$install_choice" == "" ]]; then
    echo ""
    echo "üì¶ Installing background service..."
    python3 main.py --install
    echo ""
    echo "‚úÖ INSTALLATION COMPLETE!"
    echo ""
    echo "Your Screenshot Organizer is now running in the background."
    echo "It will automatically start when you log in to your Mac."
    echo ""
    echo "Take a screenshot (Cmd+Shift+3 or Cmd+Shift+4) to see it in action!"
else
    echo ""
    echo "‚úÖ INSTALLATION COMPLETE!"
    echo ""
    echo "Configuration saved! You can now:"
    echo "  ‚Ä¢ Double-click 'StartScreenshotOrganizer.command' to start organizing"
    echo "  ‚Ä¢ Run this installer again to enable background service"
fi

echo ""
echo "üìù Useful commands:"
echo "  ‚Ä¢ Stop service: Double-click 'StopScreenshotOrganizer.command'"
echo "  ‚Ä¢ View logs: ~/Library/Logs/screenshot-organizer.log"
echo "  ‚Ä¢ Reconfigure: Run this installer again"
echo ""
echo "Press any key to close..."
read -n 1
